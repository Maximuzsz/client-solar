name: Deploy Docker to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2 via SSH
        env:
          HOST: 3.142.124.62
          USER: ubuntu
          PROJECT_DIR: /home/ubuntu/client-solar
          IMAGE_NAME: solarshare-frontend
          CONTAINER_NAME: solarshare-frontend
          GIT_REPO: https://github.com/Maximuzsz/client-solar.git
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
            set -e

            echo "📁 Criando diretório do projeto (se necessário)..."
            sudo mkdir -p ${PROJECT_DIR}
            sudo chown -R \$USER:\$USER ${PROJECT_DIR}
            cd ${PROJECT_DIR}

            echo "📥 Sincronizando repositório..."
            if [ ! -d .git ]; then
              git clone ${GIT_REPO} .
            else
              git fetch --all
              git reset --hard origin/main
            fi

            echo "🐳 Parando container antigo (se houver)..."
            docker stop ${CONTAINER_NAME} || true
            docker rm ${CONTAINER_NAME} || true

            echo "🔧 Instalando dependências..."
            if [ -f package.json ]; then
              npm install -g npm@latest
              npm ci
              npm run build || true  # se necessário
            fi

            echo "🐋 Construindo imagem Docker..."
            docker build -t ${IMAGE_NAME}:latest .

            echo "🚀 Executando novo container..."
            docker run -d \
              --name ${CONTAINER_NAME} \
              -p 80:80 \
              --restart unless-stopped \
              ${IMAGE_NAME}:latest

            echo "🧼 Limpando recursos não utilizados..."
            docker system prune -af --volumes

            echo "✅ Deploy concluído com sucesso!"
          EOF
