name: Deploy Docker to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add EC2 to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan 3.142.124.62 >> ~/.ssh/known_hosts

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy application to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@3.142.124.62 /bin/bash << 'EOSSH'
          set -e
          echo "🚀 Starting deployment process..."
          
          # 1. Navigate to project directory
          echo "📂 Setting up project directory: /home/ubuntu/client-solar"
          mkdir -p /home/ubuntu/client-solar
          cd /home/ubuntu/client-solar || {
            echo "❌ Failed to access project directory"
            exit 1
          }

          # 2. Clone or update repository
          echo "🔄 Syncing repository..."
          if [ ! -d .git ]; then
            git clone https://github.com/Maximuzsz/client-solar.git .
          else
            git fetch origin main
            git reset --hard origin/main
            git clean -fd
          fi

          # 3. Install all dependencies (including devDependencies)
          echo "📦 Installing dependencies..."
          npm ci

          # 4. Build application
          echo "🏗️ Building application..."
          npm run build

          # 5. Install production dependencies only
          echo "🔧 Installing production dependencies..."
          npm ci --omit=dev

          # 6. Manage Docker containers
          echo "🐳 Managing Docker containers..."
          if docker ps -a --format '{{.Names}}' | grep -q solarshare-frontend; then
            echo "⏹️ Stopping and removing existing container..."
            docker stop solarshare-frontend || true
            docker rm solarshare-frontend || true
          fi

          # 7. Build and run new container
          echo "🔨 Building Docker image..."
          docker build -t solarshare-frontend .

          echo "🚀 Starting new container..."
          docker run -d \
            --name solarshare-frontend \
            -p 80:80 \
            -p 443:443 \
            --restart unless-stopped \
            solarshare-frontend

          # 8. Cleanup
          echo "🧹 Cleaning up..."
          docker image prune -af --filter "until=24h"
          rm -rf node_modules

          echo "✅ Deployment completed successfully!"
          EOSSH